print("~.add(~) => ~\n", 1, -2, 1.add(-2));
// > 1.add(-2) => -1
print("~.sub(~) => ~\n", 1, -2, 1.sub(-2));
// > 1.sub(-2) => 3
print("~.mul(~) => ~\n", 1, -2, 1.mul(-2));
// > 1.mul(-2) => -2
print("~.div(~) => ~\n", 1, -2, 1.div(-2));
// > 1.div(-2) => 0
print("~.mod(%) ~ => ~\n", 1, -2, 1.mod(-2));
// > 1.mod(-2) => 1

print("~.le(~) => ~\n", 1, -2, 1.le(-2));
// > 1.le(-2) => false
print("~.lt(~) => ~\n", 1, -2, 1.lt(-2));
// > 1.lt(-2) => false
print("~.ge(~) => ~\n", 1, -2, 1.ge(-2));
// > 1.ge(-2) => true
print("~.gt(~) => ~\n", 1, -2, 1.gt(-2));
// > 1.gt(-2) => true

print("~.eq(~) => ~\n", 1, -2, 1.eq(-2));
// > 1.eq(-2) => false
print("~.neq(~) => ~\n", 1, -2, 1.neq(-2));
// > 1.neq(-2) => true
print("~.eq(~) => ~\n", 1, null, 1.eq(null));
// > 1.eq(null) => false
print("~.neq(~) => ~\n", 1, null, 1.eq(null));
// > 1.neq(null) => true
print("~.eq(~) => ~\n", 1, true, 1.eq(true));
// > 1.eq(true) => false
print("~.neq(~) => ~\n", 1, true, 1.eq(true));
// > 1.neq(true) => true
print("~.eq(~) => ~\n", 1, (object begin end), 1.eq((object begin end)));
// > 1.eq(object()) => false
print("~.neq(~) => ~\n", 1, (object begin end), 1.neq((object begin end)));
// > 1.neq(object()) => true
print("~.eq(~) => ~\n", 1, array(1,1), 1.eq(array(1,1)));
// > 1.eq([1]) => false
print("~.neq(~) => ~\n", 1, array(1,1), 1.neq(array(1,1)));
// > 1.neq([1]) => true

print("~.and(~) => ~\n", true, false, true.and(false));
// > true.and(false) => false
print("~.or(~) => ~\n", true, false, true.or(false));
// > true.or(false) => true
print("~.eq(~) => ~\n", true, false, true.eq(false));
// > true.eq(false) => false
print("~.neq(~) => ~\n", true, false, true.neq(false));
// > true.neq(false) => true

print("~.eq(~) => ~\n", true, -2, true.eq(-2));
// > true.eq(-2) => false
print("~.neq(~) => ~\n", true, -2, true.neq(-2));
// > true.neq(-2) => true
print("~.eq(~) => ~\n", true, null, true.eq(null));
// > true.eq(null) => false
print("~.neq(~) => ~\n", true, null, true.eq(null));
// > true.neq(null) => true
print("~.eq(~) => ~\n", true, (object begin end), true.eq((object begin end)));
// > true.eq(object()) => false
print("~.neq(~) => ~\n", true, (object begin end), true.neq((object begin end)));
// > true.neq(object()) => true
print("~.eq(~) => ~\n", true, array(1,true), true.eq(array(1,true)));
// > true.eq([true]) => false
print("~.neq(~) => ~\n", true, array(1,true), true.neq(array(1,true)));
// > true.neq([true]) => true

print("~.eq(~) => ~\n", null, -2, null.eq(-2));
// > null.eq(-2) => false
print("~.neq(~) => ~\n", null, -2, null.neq(-2));
// > null.neq(-2) => true
print("~.eq(~) => ~\n", null, null, null.eq(null));
// > null.eq(null) => true
print("~.neq(~) => ~\n", null, null, null.eq(null));
// > null.neq(null) => false
print("~.eq(~) => ~\n", null, (object begin end), null.eq((object begin end)));
// > null.eq(object()) => false
print("~.neq(~) => ~\n", null, (object begin end), null.neq((object begin end)));
// > null.neq(object()) => null
print("~.eq(~) => ~\n", null, array(1,null), null.eq(array(1,null)));
// > null.eq([null]) => false
print("~.neq(~) => ~\n", null, array(1,null), null.neq(array(1,null)));
// > null.neq([null]) => true